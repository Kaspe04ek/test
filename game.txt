from pygame import *
from random import randint
from time import sleep
 
img_ball = "ball.png" 
img_blue = "blue.png" 
img_red = "red.png" 
img_back = 'back.png'

win_width = 700
win_height = 500
display.set_caption("ping-pong")
window = display.set_mode((win_width, win_height))
background = transform.scale(image.load(img_back), (win_width, win_height))

font.init()
font2 = font.SysFont('Arial', 36)
font1 = font.SysFont('Arial' , 80)



class GameSprite(sprite.Sprite):
 #конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
       sprite.Sprite.__init__(self)
 
       self.image = transform.scale(image.load(player_image), (size_x, size_y))
       self.speed = player_speed
 
       #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
       self.rect = self.image.get_rect()
       self.rect.x = player_x
       self.rect.y = player_y
    def reset(self):
       window.blit(self.image, (self.rect.x, self.rect.y))
    def collidepoint(self, x, y):
        return self.rect.collidepoint(x, y)       
    
    def colliderect(self, rect):
        return self.rect.colliderect(rect)
 
 
#класс главного игрока 1
class red(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_w]and self.rect.y > 0:
            self.rect.y -= self.speed
        if keys[K_s]and self.rect.y < 420:
            self.rect.y += self.speed

class blue(GameSprite):
    def update(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 0:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < 420:
            self.rect.y += self.speed
 
#класс спрайта-врага  
class ball(GameSprite):
    speed_y = 5
    speed_x = 5
   #движение врага

    def update(self):
        self.rect.x += 5
        if Ball.colliderect(Red_P1) or Ball.colliderect(Blue_P2.rect):
            speed_y *= -1
        if self.rect.y < 0:
            speed_y *= -1
        if self.rect.x > 450 or self.rect.x < 0:
            speed_x *= -1


 
 
#Создаём окошко

#создаём спрайты
Red_P1 = red(img_red, 5 , 200, 90, 80, 10)
Blue_P2 = blue(img_blue, 600 , 200 ,  90 , 80 ,10)
Ball = ball(img_ball , 350 , 225 , 25 , 25 , 5 )
 
 
#переменная "игра закончилась": как только там True, в основном цикле перестают работать спрайты
finish = False
#Основной цикл игры:
run = True #флаг сбрасывается кнопкой закрытия окна
while run:
   #событие нажатия на кнопку “Закрыть”
    for e in event.get():
        if e.type == QUIT:
            run = False
    if not finish:
        #обновляем фон
        window.blit(background,(0,0))

        #производим движения спрайтов
        Red_P1.update()
        Blue_P2.update()
        Ball.update()


        #обновляем их в новом местоположении при каждой итерации цикла
        Red_P1.reset()
        Blue_P2.reset()
        Ball.reset()
        
    
        display.update()
    time.delay(30)